#!/bin/bash

# find / tree / search
ff() { find "${@:2}" -type f -name "$1" 2>/dev/null; }
ft() { tree -a -P "$@" --prune --dirsfirst; }
fs() { ff "$1" "${@:3}" | xargs grep "$2" -n --color=auto 2>/dev/null; }

jsf() { ff "*.js" "$@" | egrep -v "node_modules|bower_components|lib-cov|coverage|\.min"; }
jst() { ft "*.js" -I "node_modules|bower_components|lib-cov|coverage|*.min*" "$@"; }
jss() { jsf "${@:2}" | xargs egrep "$1" -n --color=auto 2>/dev/null; }

# -- Init ---------------------------------------------------------------------

git-init() {
  # remove and refetch hooks from templates in order to get updates
  rm .git/hooks/** 2>/dev/null || true
  git init "$@"
}

# -- Misc ---------------------------------------------------------------------

compile_xmonad() {
  ghc -threaded -i"$HOME/.xmonad/lib" ~/.xmonad/xmonad.hs -o ~/.xmonad/xmonad-x86_64-linux
}

# keyload
key() {
  local keys
  for k in "$@"; do
    keys="$keys $HOME/.ssh/${k}_id"
  done
  keychain --timeout $((8*60)) --quiet --host agent $keys
  source ~/.keychain/agent-sh
}
_key() {
  local cur prev opts
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  opts="$(find ~/.ssh -name "*_id" | sed 's/^.*\.ssh\/\(.*\)_id/\1/')"
  COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
  return 0
}
complete -F _key key

# extraction
extract () {
  if [ -f "$1" ]; then
    case $1 in
      *.tar.bz2) tar xvjf "$1"    ;;
      *.tar.gz)  tar xvzf "$1"    ;;
      *.bz2)     bunzip2 "$1"     ;;
      *.rar)     unrar x "$1"     ;;
      *.gz)      gunzip "$1"      ;;
      *.tar)     tar xvf "$1"     ;;
      *.tbz2)    tar xvjf "$1"    ;;
      *.tgz)     tar xvzf "$1"    ;;
      *.zip)     unzip "$1"       ;;
      *.Z)       uncompress "$1"  ;;
      *.7z)      7z x "$1"        ;;
      *)         echo "unknown extension for '$1'" ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}
