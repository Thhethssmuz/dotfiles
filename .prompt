#!/bin/bash

source ~/.colors

git_flags() {
  local flags=''

  # check if the current directory is in .git before running git checks
  if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

    # Ensure the index is up to date.
    git update-index --really-refresh -q &>/dev/null

    # Check for uncommitted changes in the index.
    if ! git diff --quiet --ignore-submodules --cached; then
      flags+='+'
    fi;

    # Check for unstaged changes.
    if ! git diff-files --quiet --ignore-submodules --; then
      flags+='!'
    fi;

    # Check for untracked files.
    if [ -n "$(git ls-files --others --exclude-standard)" ]; then
      flags+='?'
    fi;

    # Check for ahead by commits
    if git status | grep -q "branch is ahead"; then
      flags+='>'
    fi

  fi

  echo -e "$flags"
}

git_prompt() {
  local repo=''
  local branch=''
  local flags=''

  # Check if the current directory is in a Git repository.
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    flags="$(git_flags)"

    repo="$(git rev-parse --show-toplevel)"
    if [ "$repo" == "$HOME" ]; then
      repo="dotfiles"
    else
      repo="$(basename $repo)"
    fi
    repo="$(_color_ bold magenta)${repo}$(_color_ reset)"

    branch="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
      git rev-parse --short HEAD 2> /dev/null || \
      echo 'unknown')"

    if [ -n "${flags}" ]; then
      branch="$(_color_ bold red)${branch}$(_color_ reset)"
      flags="$(_color_ bold yellow)${flags}$(_color_ reset)"
    else
      branch="$(_color_ bold green)${branch}$(_color_ reset)"
      flags=" "
    fi

    echo -e "${repo}${flags}${branch}"
  fi
}

set_prompt() {
  local prev=$([ $? -eq 0 ] && echo -e "$(_color_ green)\u2714$(_color_ reset)" || echo -e "$(_color_ red)\u2718$(_color_ reset)")

  PS1=""
  PS1+="$(_color_ bold black)$(date '+%H:%M:%S')$(_color_ reset) "
  PS1+="${prev} "
  PS1+="$(_color_ bold black)\\u@\\h$(_color_ reset) "
  PS1+="$(git_prompt)"
  PS1+="\n$(_color_ bold blue)\\w$(_color_ reset) $(_color_ bold blue)\$$(_color_ reset) "
}

PROMPT_COMMAND='set_prompt'
