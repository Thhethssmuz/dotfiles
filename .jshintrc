{
    "maxerr"        : 999,      // {int} Maximum error before stopping

    // Enforcing
    "bitwise"       : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)
    "camelcase"     : false,    // true: Identifiers must be in camelCase
    "curly"         : false,    // true: Require {} for every new block or scope
    "eqeqeq"        : true,     // true: Require triple equals (===) for comparison
    "esversion"     : 6,        // {int} The ECMAScript version to which the code must adhere
    "forin"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "immed"         : true,     // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
    "indent"        : 2,        // {int} Number of spaces to use for indentation
    "latedef"       : true,     // true: Require variables/functions to be defined before being used
    "maxcomplexity" : 24,       // {int} Max cyclomatic complexity per function
    "maxdepth"      : 6,        // {int} Max depth of nested blocks (within functions)
    "maxlen"        : 120,      // {int} Max number of characters per line
    "maxparams"     : 5,        // {int} Max number of formal params allowed per function
    "maxstatements" : 200,      // {int} Max number statements per function
    "newcap"        : true,     // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "noempty"       : true,     // true: Prohibit use of empty blocks
    "nonbsp"        : true,     // true: Prohibit "non-breaking whitespace" characters.
    "nonew"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)
    "notypeof"      : false,    // true: Tolerate invalid typeof operator values
    "plusplus"      : true,     // true: Prohibit use of `++` & `--`
    "quotmark"      : "single", // Quotation mark consistency:
                                //   false    : do nothing (default)
                                //   true     : ensure whatever is used is consistent
                                //   "single" : require single quotes
                                //   "double" : require double quotes
    "singleGroups"  : true,     // true: prohibit the use of the grouping operator when it is not required
    "strict"        : "global", // Require the code to run in ECMAScript 5's strict mode
    "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
    "unused"        : true,     // Unused variables:
                                //   true     : all variables, last function parameter
                                //   "vars"   : all variables only
                                //   "strict" : all variables, all function parameters
    "varstmt"       : true,     // true: Prohibit the use of the `var` statement

    // Relaxing
    "asi"           : false,    // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "boss"          : false,    // true: Tolerate assignments where comparisons would be expected
    "debug"         : false,    // true: Allow debugger statements e.g. browser breakpoints.
    "elision"       : true,     // true: Tolerate use of ES3 array elision elements.
    "eqnull"        : false,    // true: Tolerate use of `== null`
    "evil"          : false,    // true: Tolerate use of `eval` and `new Function()`
    "expr"          : false,    // true: Tolerate `ExpressionStatement` as Programs
    "funcscope"     : false,    // true: Tolerate defining variables inside control statements
    "iterator"      : false,    // true: Tolerate using the `__iterator__` property
    "lastsemic"     : false,    // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "laxbreak"      : false,    // true: Tolerate possibly unsafe line breakings
    "laxcomma"      : false,    // true: Tolerate comma-first style coding
    "loopfunc"      : false,    // true: Tolerate functions being defined in loops
    "moz"           : false,    // true: Allow Mozilla specific syntax
    "multistr"      : false,    // true: Tolerate multi-line strings
    "noyield"       : true,     // true: Tolerate generator functions with no yield statement in them.
    "proto"         : false,    // true: Tolerate using the `__proto__` property
    "scripturl"     : false,    // true: Tolerate script-targeted URLs
    "shadow"        : false,    // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "sub"           : false,    // true: Tolerate using `[]` notation when it can still be expressed in dot notation
    "supernew"      : false,    // true: Tolerate `new function () { ... };` and `new Object;`
    "validthis"     : false,    // true: Tolerate using this in a non-constructor function
    "withstmt"      : false,    // true: Tolerate the use of the `with` statement.

    // Environments
    "browser"       : true,   // Web Browser (window, document, etc)
    "browserify"    : true,   // Browserify (node.js code in the browser)
    "couch"         : false,  // CouchDB
    "devel"         : true,   // Development/debugging (alert, confirm, etc)
    "dojo"          : false,  // Dojo Toolkit
    "jasmine"       : false,  // Jasmine
    "jquery"        : false,  // jQuery
    "mocha"         : false,  // Mocha
    "module"        : false,  // ES6 module
    "mootools"      : false,  // MooTools
    "node"          : true,   // Node.js
    "nonstandard"   : false,  // Widely adopted globals (escape, unescape, etc)
    "phantom"       : false,  // PhantomJS
    "prototypejs"   : false,  // Prototype and Scriptaculous
    "qunit"         : false,  // QUnit
    "rhino"         : false,  // Rhino
    "shelljs"       : false,  // ShellJS
    "typed"         : false,  // Globals for typed array constructions
    "worker"        : false,  // Web Workers
    "wsh"           : false,  // Windows Scripting Host
    "yui"           : false,  // Yahoo User Interface

    // Custom Globals
    "globals"       : {}      // additional predefined global variables
}
