#!/usr/bin/env bash

FAIL=false

check() {
  FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E "$1$")

  if [ -z "$FILES" ]; then
    return 0;
  fi

  if ! hash "$2" 2>/dev/null; then
    echo -e "\e[1m$2\e[0m is not installed"
    FAIL=true
    return 1
  fi

  while read -r FILE; do
    if ! "${@:2}" "$FILE" >/dev/null 2>&1; then
      echo -e "\e[1m$2\e[0m reported errors in \e[3;31m$FILE\e[0m"
      FAIL=true
    fi
  done < <(echo "$FILES")
}

get_remote() {
  git remote -v | grep origin | grep push | awk '{print $2}'
}

# verify git identities
if [[ -z $(get_remote) ]]; then
  echo -e "You have not set remote origin: use git remote add origin <url>"
  FAIL=true
elif [[ $(get_remote) == git@github.com:Thhethssmuz* ]]; then
  if [[ $(git whoami) != Thhethssmuz* ]]; then
    echo -e "You have not set your identity: use 'git thhethssmuz'"
    FAIL=true
  fi
elif [[ $(get_remote) == git@brogs* ]]; then
  if [[ $(git whoami) != Thhethssmuz* ]]; then
    echo -e "You have not set your identity: use 'git thhethssmuz'"
    FAIL=true
  fi
elif [[ $(get_remote) == *gogs.tnst.no* ]]; then
  if [[ $(git whoami) != Svein* ]]; then
    echo -e "You have not set your identity: use 'git sia'"
    FAIL=true
  fi
elif [[ $(get_remote) == *bitbucket.tc.nsc.no* ]]; then
  if [[ $(git whoami) != Svein* ]]; then
    echo -e "You have not set your identity: use 'git sia'"
    FAIL=true
  fi
fi

# run all staged files through git diff --check
# catches whitespace errors and leftover conflict markers
check "*" git check

# run all staged .js files through eslint
check "*\.js" eslint

# run all staged .json files through json --validate
check "*\.json" json -qnf

# run all staged .sh files through shellcheck
check "*\.sh" shellcheck -x

if $FAIL; then
  echo "fix errors and try again or commit with --no-verify to ignore errors"
  exit 1
fi
